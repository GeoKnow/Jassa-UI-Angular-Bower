/*
 * jassa-ui-angular
 * https://github.com/GeoKnow/Jassa-UI-Angular

 * Version: 0.0.1-SNAPSHOT - 2014-02-13
 * License: MIT
 */
angular.module("ui.jassa",["ui.jassa.tpls","ui.jassa.constraint-list","ui.jassa.facet-value-list","ui.jassa.facettree"]),angular.module("ui.jassa.tpls",["template/facet-value-list/facet-value-list.html","template/facettree/facet-dir-content.html","template/facettree/facet-tree-item.html"]),angular.module("ui.jassa.constraint-list",[]),angular.module("ui.jassa.facet-value-list",[]).controller("FacetValueListCtrl",["$rootScope","$scope","$q",function(a,b,c){b.filterText="",b.totalItems=0,b.currentPage=1,b.maxSize=5,console.log("FacetValueList Ctrl entered");var d=null,e=this,f={};f.FacetValueService=Class.create({initialize:function(a,b){this.sparqlService=a,this.facetTreeConfig=b},createFacetValueFetcher:function(a){var b=facetTreeConfig.getFacetConfig(),c=facete.FaceteUtils.createFacetConceptGenerator(b),d=c.createConceptResources(a,!0),e=(new facete.ConstraintTaggerFactory(b.getConstraintManager()),new sponate.StoreFacade(sparqlService));e.addMap(labelMap,"labels"),labelsStore=e.labels;var g={};text&&(g={$or:[{hiddenLabels:{$elemMatch:{id:{$regex:text,$options:"i"}}}},{id:{$regex:text,$options:"i"}}]});{var h=labelsStore.find(g).concept(d,!0);new f.FacetValueFetcher(h)}return resul}}),f.FacetValueFetcher=Class.create({initialize:function(a){this.baseFlow=a},fetchCount:function(){var a=baseFlow.count();return a},fetchData:function(a,b){var c=this.baseFlow.skip(a).limit(b),d=c.asList(!0).pipe(function(a){var b=constraintTaggerFactory.createConstraintTagger(path),c=_(a).map(function(a){var c=a.id,d=a.displayLabel?a.displayLabel:""+a.id,e={displayLabel:d,path:path,node:c,tags:b.getTags(c)};return e});return c});return d}});var g=function(){var a=b.sparqlService&&b.facetTreeConfig&&b.path;d=a?new f.FacetValueService(b.sparqlService,b.FacetTreeConfig):null},h=function(){g(),e.refresh()};b.$watch("sparqlService",function(){h()}),b.$watch("facetTreeConfig.hashCode()",function(){h()},!0),b.$watch("path",function(){h()},!0),b.$watch("currentPage",function(){h()}),b.toggleConstraint=function(a){var b=facetConfig.getConstraintManager(),c=new facete.ConstraintSpecPathValue("equal",a.path,a.node);b.toggleConstraint(c)};b.filterTable=function(a){b.filterText=a,h()}}]).directive("facetValueList",function(){return{restrict:"EA",replace:!0,templateUrl:"template/facet-value-list/facet-value-list.html",transclude:!1,require:"facetValueList",scope:{sparqlService:"=",facetTreeConfig:"=",path:"=",onSelect:"&select"},controller:"FacetValueListCtrl"}}),angular.module("ui.jassa.facettree",[]).controller("FacetTreeCtrl",["$rootScope","$scope","$q",function(a,b,c){var d=this,e=function(){var a=b.sparqlService&&b.facetTreeConfig;b.facetTreeService=a?Jassa.facete.FaceteUtils.createFacetTreeService(b.sparqlService,b.facetTreeConfig,null):null},f=function(){e(),d.refresh()};b.$watch("sparqlService",function(){f()}),b.$watch("facetTreeConfig.hashCode()",function(){f()},!0),b.doFilter=function(a,c){b.facetTreeConfig.getPathToFilterString().put(a,c),d.refresh()},d.refresh=function(){var d=b.facet,e=d?d.item.getPath():new facete.Path;if(b.facetTreeService){var f=Jassa.facete.FaceteUtils.createFacetTreeTagger(b.facetTreeConfig.getPathToFilterString()),g=b.facetTreeService.fetchFacetTree(e);Jassa.sponate.angular.bridgePromise(g,c.defer(),a).then(function(a){f.applyTags(a),b.facet=a})}else b.facet=null},b.toggleCollapsed=function(a){Jassa.util.CollectionUtils.toggleItem(b.facetTreeConfig.getExpansionSet(),a);var c=b.facetTreeConfig.getExpansionMap().get(a);null==c&&b.facetTreeConfig.getExpansionMap().put(a,1),d.refresh()},b.selectIncoming=function(a){if(console.log("Incoming selected at path "+a),b.facetTreeConfig){var c=b.facetTreeConfig.getExpansionMap().get(a);2!=c&&(b.facetTreeConfig.getExpansionMap().put(a,2),d.refresh())}},b.selectOutgoing=function(a){if(console.log("Outgoing selected at path "+a),b.facetTreeConfig){var c=b.facetTreeConfig.getExpansionMap().get(a);1!=c&&(b.facetTreeConfig.getExpansionMap().put(a,1),d.refresh())}},b.selectFacetPage=function(a,c){var e=c.item.getPath(),f=b.facetTreeConfig.getFacetStateProvider().getFacetState(e),g=f.getResultRange();console.log("Facet state for path "+e+": "+f);var h=g.getLimit()||0,i=h?(a-1)*h:null;g.setOffset(i),d.refresh()},b.toggleSelected=function(a){b.onSelect({path:a})},b.toggleTableLink=function(a){tableMod.togglePath(a),b.$emit("facete:refresh")}}]).directive("facetTree",function(){return{restrict:"EA",replace:!0,templateUrl:"template/facettree/facet-tree-item.html",transclude:!1,require:"facetTree",scope:{sparqlService:"=",facetTreeConfig:"=",onSelect:"&select"},controller:"FacetTreeCtrl",compile:function(){return function(){}}}}),angular.module("template/facet-value-list/facet-value-list.html",[]).run(["$templateCache",function(a){a.put("template/facet-value-list/facet-value-list.html",'		<div class="frame">\n			<form ng-submit="filterTable(filterText)">\n			    <input type="text" ng-model="filterText" />\n				<input class="btn-primary" type="submit" value="Filter" />\n			</form>\n			<table>\n                <tr><th>Value</th><th>Constrained</th></tr>\n<!-- <th>Count</th> -->\n			    <tr ng-repeat="item in facetValues">\n                    <td>{{item.displayLabel}}</td>\n<!--                    <td>todo</td> -->\n                    <td><input type="checkbox" ng-model="item.tags.isConstrainedEqual" ng-change="toggleConstraint(item)" /></td>\n                </tr>\n        	</table>\n    		<pagination class="pagination-small" total-items="totalItems" page="$parent.currentPage" max-size="maxSize" boundary-links="true" rotate="false" num-pages="numPages"></pagination>\n		</div>\n')}]),angular.module("template/facettree/facet-dir-content.html",[]).run(["$templateCache",function(a){a.put("template/facettree/facet-dir-content.html",'\n<!-- ng-show="dirset.pageCount > 1 || dirset.children.length > 5" -->\n\n<div style="width: 100%; background-color: #eeeeff;">\n	<div style="padding-right: 16px; padding-left: {{16*(dirset.path.getLength()+1)}}px">\n\n		<form class="form-inline" role="form" ng-submit="doFilter(dirset.path, dirset.filter.filterString)">\n\n			<div class="form-group">\n				<input type="text" class="form-control input-sm" placeholder="Filter" ng-model="dirset.filter.filterString" value="{{dirset.filter.filterString}}" />\n			</div>\n			<div class="form-group">\n				<button type="submit" class="btn btn-default input-sm">Filter</button>\n			</div>\n			<div class="form-group" ng-if="dirset.pageCount > 1" style="background-color: #eeeeff">\n				<pagination\n					style="padding-left: {{16*(dirset.path.getLength()+1)}}px"\n					class="pagination-tiny" max-size="7"\n					total-items="dirset.childFacetCount" page="dirset.pageIndex"\n					boundary-links="true" rotate="false"\n					on-select-page="selectFacetPage(page, facet)" first-text="<<"\n					previous-text="<" next-text=">" last-text=">>" />\n			</div>\n\n		</form>\n	</div>\n</div>\n\n\n<!--                 		<div ng-show="dirset.pageCount != 1" style="width:100%; background-color: #eeeeff"> -->\n<!--     		         		<pagination style="padding-left: {{16 * (dirset.path.getLength() + 1)}}px" class="pagination-tiny" max-size="7" total-items="dirset.childFacetCount" page="dirset.pageIndex" boundary-links="true" rotate="false" on-select-page="selectFacetPage(page, facet)" first-text="<<" previous-text="<" next-text=">" last-text=">>"></pagination> -->\n<!--                 		</div> -->\n\n<span ng-show="dirset.children.length == 0"\n	style="color: #aaaaaa; padding-left: {{16*(dirset.path.getLength()+1)}}px">(no\n	entries)</span>\n\n<div style="padding-left: {{16*(dirset.path.getLength()+1)}}px"\n	ng-repeat="facet in dirset.children"\n	ng-include="\'template/facettree/facet-tree-item.html\'" ></div>\n\n\n')}]),angular.module("template/facettree/facet-tree-item.html",[]).run(["$templateCache",function(a){a.put("template/facettree/facet-tree-item.html",'<div ng-class="{\'frame\': facet.isExpanded}">\n	<div class="facet-row" ng-class="{\'highlite\': facet.isExpanded}" ng-mouseover="facet.isHovered=true" ng-mouseleave="facet.isHovered=false">\n		<a ng-show="facet.isExpanded" href="" ng-click="toggleCollapsed(facet.item.getPath())"><span class="glyphicon glyphicon-chevron-down"></span></a>\n		<a ng-show="!facet.isExpanded" href="" ng-click="toggleCollapsed(facet.item.getPath())"><span class="glyphicon glyphicon-chevron-right"></span></a>\n		<a data-rdf-term="{{facet.item.getNode().toString()}}" title="{{facet.item.getNode().getUri()}}" href="" ng-click="toggleSelected(facet.item.getPath())">{{facet.item.getNode().getUri()}}</a>\n\n\n		<a ng-visible="facet.isHovered || facet.table.isContained" href="" ng-click="toggleTableLink(facet.item.getPath())"><span class="glyphicon glyphicon-list-alt"></span></a>\n\n\n		<span style="float: right" class="badge">{{facet.item.getDistinctValueCount()}}</span>	\n	</div>\n	<div ng-if="facet.isExpanded" style="width:100%"> \n\n\n		<tabset class="tabset-small">\n			<tab heading="Incoming Facets" active="{{facet.isIncomingActive === true}}" select="selectIncoming(facet.item.getPath())">\n				<div ng-repeat="dirset in [facet.incoming]" ng-include="\'template/facettree/facet-dir-content.html\'"></div>\n			</tab>\n			<tab heading="Outgoing Facets" active="{{facet.isOutgoingActive === true}}" select="selectOutgoing(facet.item.getPath())">					\n				<div ng-repeat="dirset in [facet.outgoing]" ng-include="\'template/facettree/facet-dir-content.html\'"></div>\n			</tab>\n		</tabset>\n	</div>\n</div>\n')}]);
/*
 * jassa-ui-angular
 * https://github.com/GeoKnow/Jassa-UI-Angular

 * Version: 0.0.1-SNAPSHOT - 2014-02-13
 * License: MIT
 */
angular.module("ui.jassa",["ui.jassa.constraint-list","ui.jassa.facet-value-list","ui.jassa.facettree"]),angular.module("ui.jassa.constraint-list",[]),angular.module("ui.jassa.facet-value-list",[]).controller("FacetValueListCtrl",["$rootScope","$scope","$q",function(a,b,c){b.filterText="",b.totalItems=0,b.currentPage=1,b.maxSize=5;var d=null,e=this,f={};f.FacetValueService=Class.create({initialize:function(a,b){this.sparqlService=a,this.facetTreeConfig=b},createFacetValueFetcher:function(a){var b=this.facetTreeConfig.getFacetConfig(),c=facete.FaceteUtils.createFacetConceptGenerator(b),d=c.createConceptResources(a,!0),e=(new facete.ConstraintTaggerFactory(b.getConstraintManager()),new sponate.StoreFacade(this.sparqlService));e.addMap(labelMap,"labels"),labelsStore=e.labels;var g={};text&&(g={$or:[{hiddenLabels:{$elemMatch:{id:{$regex:text,$options:"i"}}}},{id:{$regex:text,$options:"i"}}]});{var h=labelsStore.find(g).concept(d,!0);new f.FacetValueFetcher(h)}return resul}}),f.FacetValueFetcher=Class.create({initialize:function(a){this.baseFlow=a},fetchCount:function(){var a=baseFlow.count();return a},fetchData:function(a,b){var c=this.baseFlow.skip(a).limit(b),d=c.asList(!0).pipe(function(a){var b=constraintTaggerFactory.createConstraintTagger(path),c=_(a).map(function(a){var c=a.id,d=a.displayLabel?a.displayLabel:""+a.id,e={displayLabel:d,path:path,node:c,tags:b.getTags(c)};return e});return c});return d}});var g=function(){var a=b.sparqlService&&b.facetTreeConfig&&b.path;d=a?new f.FacetValueService(b.sparqlService,b.FacetTreeConfig):null},h=function(){g(),e.refresh()};b.$watch("sparqlService",function(){h()}),b.$watch("facetTreeConfig.hashCode()",function(){h()},!0),b.$watch("path",function(){h()},!0),b.$watch("currentPage",function(){h()}),b.toggleConstraint=function(a){var b=facetConfig.getConstraintManager(),c=new facete.ConstraintSpecPathValue("equal",a.path,a.node);b.toggleConstraint(c)},e.refresh=function(){var e=b.path;if(!d||!e)return b.totalItems=0,void(b.facetValues=[]);var f=d.createFacetValueFetcher(b.path,b.filterText),g=f.fetchCount(),h=10,i=(b.currentPage-1)*h,j=fetcer.fetchData(i,h);Jassa.sponate.angular.bridgePromise(g,c.defer(),a).then(function(a){b.totalItems=a}),Jassa.sponate.angular.bridgePromise(j,c.defer(),a).then(function(a){b.facetValues=a})},b.filterTable=function(a){b.filterText=a,h()}}]).directive("facetValueList",function(){return{restrict:"EA",replace:!0,templateUrl:"template/facet-value-list/facet-value-list.html",transclude:!1,require:"facetValueList",scope:{sparqlService:"=",facetTreeConfig:"=",path:"=",onSelect:"&select"},controller:"FacetValueListCtrl"}}),angular.module("ui.jassa.facettree",[]).controller("FacetTreeCtrl",["$rootScope","$scope","$q",function(a,b,c){var d=this,e=function(){var a=b.sparqlService&&b.facetTreeConfig;b.facetTreeService=a?Jassa.facete.FaceteUtils.createFacetTreeService(b.sparqlService,b.facetTreeConfig,null):null},f=function(){e(),d.refresh()};b.$watch("sparqlService",function(){f()}),b.$watch("facetTreeConfig.hashCode()",function(){f()},!0),b.doFilter=function(a,c){b.facetTreeConfig.getPathToFilterString().put(a,c),d.refresh()},d.refresh=function(){var d=b.facet,e=d?d.item.getPath():new facete.Path;if(b.facetTreeService){var f=Jassa.facete.FaceteUtils.createFacetTreeTagger(b.facetTreeConfig.getPathToFilterString()),g=b.facetTreeService.fetchFacetTree(e);Jassa.sponate.angular.bridgePromise(g,c.defer(),a).then(function(a){f.applyTags(a),b.facet=a})}else b.facet=null},b.toggleCollapsed=function(a){Jassa.util.CollectionUtils.toggleItem(b.facetTreeConfig.getExpansionSet(),a);var c=b.facetTreeConfig.getExpansionMap().get(a);null==c&&b.facetTreeConfig.getExpansionMap().put(a,1),d.refresh()},b.selectIncoming=function(a){if(console.log("Incoming selected at path "+a),b.facetTreeConfig){var c=b.facetTreeConfig.getExpansionMap().get(a);2!=c&&(b.facetTreeConfig.getExpansionMap().put(a,2),d.refresh())}},b.selectOutgoing=function(a){if(console.log("Outgoing selected at path "+a),b.facetTreeConfig){var c=b.facetTreeConfig.getExpansionMap().get(a);1!=c&&(b.facetTreeConfig.getExpansionMap().put(a,1),d.refresh())}},b.selectFacetPage=function(a,c){var e=c.item.getPath(),f=b.facetTreeConfig.getFacetStateProvider().getFacetState(e),g=f.getResultRange();console.log("Facet state for path "+e+": "+f);var h=g.getLimit()||0,i=h?(a-1)*h:null;g.setOffset(i),d.refresh()},b.toggleSelected=function(a){b.onSelect({path:a})},b.toggleTableLink=function(a){tableMod.togglePath(a),b.$emit("facete:refresh")}}]).directive("facetTree",function(){return{restrict:"EA",replace:!0,templateUrl:"template/facettree/facet-tree-item.html",transclude:!1,require:"facetTree",scope:{sparqlService:"=",facetTreeConfig:"=",onSelect:"&select"},controller:"FacetTreeCtrl",compile:function(){return function(){}}}});